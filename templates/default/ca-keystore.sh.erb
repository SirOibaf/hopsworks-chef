#!/bin/bash

# Copyright (C) 2014 - 2018 Logical Clocks AB. All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

set -e
if [ $# -ne 1 ]; then
 echo "incorrect usage - keystore password required"
 exit 2
fi

cd <%= node['hopssite']['certs_dir'] %>

KEYSTOREPW=$1

if [ -e "ca_pub.pem" ] && [ -e "intermediate_ca_pub.pem" ] && [ -e "priv.key" ] && [ -e "pub.pem" ] ; then
  cat ca_pub.pem intermediate_ca_pub.pem > chain.cert.pem
  openssl pkcs12 -export -chain -in pub.pem -inkey priv.key -out cert_and_key.p12 -name <%= node['hostname'] %> -CAfile chain.cert.pem -caname chain -password pass:$KEYSTOREPW
  keytool -importkeystore -destkeystore keystore.jks -srckeystore cert_and_key.p12 -srcstoretype PKCS12 -alias <%= node['hostname'] %> -srcstorepass $KEYSTOREPW -deststorepass $KEYSTOREPW -destkeypass $KEYSTOREPW
  keytool -import -noprompt -trustcacerts -alias IntermediateCA -file intermediate_ca_pub.pem -keystore truststore.jks -srcstorepass $KEYSTOREPW -deststorepass $KEYSTOREPW -destkeypass $KEYSTOREPW
  keytool -import -noprompt -trustcacerts -alias CARoot -file ca_pub.pem -keystore truststore.jks -srcstorepass $KEYSTOREPW -deststorepass $KEYSTOREPW -destkeypass $KEYSTOREPW
  cp keystore.jks <%= @directory %>/keystore.jks
  cp truststore.jks <%= @directory %>/truststore.jks

  rm keystore.jks truststore.jks cert_and_key.p12 chain.cert.pem
  chmod 644 <%= @directory %>/*
  chmod 755 <%= @directory %>
  rm pub.pem ca_pub.pem intermediate_ca_pub.pem priv.key
else
  exit 1
fi
